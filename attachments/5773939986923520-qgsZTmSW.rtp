//* comment *//

// Copyright (C) 2017 Sanatan K. Chaudhary

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

//* globals *//
var carbonEmission = 0;
var covertReadableCarbon = carbonEmission => {
  if (carbonEmission < 1000) return `${Math.round(carbonEmission * 1000) / 100} kg CO2`;

  var tonnes = Math.floor(carbonEmission / 1000);
  var kg = Math.round((carbonEmission % 1000) * 100) / 100;
  if (kg === 0) return `${tonnes} tonnes CO2`;
  return `${tonnes} tonnes ${kg} kg CO2`;
};

//* block-globals *//
var oneArgBlock = function(name, label, defaultValue) {
  var block = new ProtoBlock(name);
  block.palette = palettes.dict['co2'];
  blocks.protoBlockDict[name] = block;
  block.staticLabels.push(label);
  block.adjustWidthToLabel();
  block.oneArgMathBlock();
  block.dockTypes[1] = 'anyin';
  block.defaults.push(defaultValue || 1);
};

var pictureBlock = function(name, label, defaultValue) {
  var block = new ProtoBlock(name);
  block.palette = palettes.dict['co2'];
  blocks.protoBlockDict[name] = block;
  block.image = pluginsImages[name];
  block.mediaBlock();
  block.dockTypes[0] = 'numberout';
  block.defaults.push(defaultValue || 1);
};

//* arg-globals *//
var block = logo.blocks.blockList[blk];
var conns = block.connections;

//* flow-globals *//
var block = logo.blocks.blockList[blk];
var conns = block.connections;
function showMsg(data) {
    logo.textMsg(JSON.stringify(data));
};

//* block:consume_carbon *//
var block = new ProtoBlock('consume_carbon');
block.palette = palettes.dict['co2'];
blocks.protoBlockDict['consume_carbon'] = block;
block.staticLabels.push('consume carbon');
block.adjustWidthToLabel();
block.oneArgBlock();
block.dockTypes[1] = 'numberin';

//* block:book_hardcover *//
oneArgBlock('book_hardcover', 'Book (Hard Cover)');

//* arg:book_hardcover *//
var bookNum = +(logo.parseArg(logo, turtle, conns[1]));
block.value = bookNum * 5;

//* block:book_softcover *//
oneArgBlock('book_softcover', 'Book (Soft Cover)');

//* arg:book_softcover *//
var bookNum = +(logo.parseArg(logo, turtle, conns[1]));
block.value = bookNum * 10.2;

//* block:car *//
var block = new ProtoBlock('car');
block.palette = palettes.dict['co2'];
blocks.protoBlockDict['car'] = block;
block.staticLabels.push('car trips');
block.adjustWidthToLabel();
block.oneArgMathBlock();
block.defaults.push(1);
block.dockTypes[1] = 'numberin';

//* arg:car *//
var trip = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trip * (5 / 24) * 14.3;

//* block:electricity *//
oneArgBlock('electricity', 'Electricity (in kWh)', 4800);

//* arg:electricity *//
var kwh = +(logo.parseArg(logo, turtle, conns[1]));
block.value = kwh * 0.527

//* block:natural_gas *//
oneArgBlock('natural_gas', 'Natural Gas (in kWh)', 18000);

//* arg:natural_gas *//
var kwh = +(logo.parseArg(logo, turtle, conns[1]));
block.value = kwh * 0.203

//* block:oil *//
oneArgBlock('oil', 'Oil (in litres)', 10);

//* arg:oil *//
var litres = +(logo.parseArg(logo, turtle, conns[1]));
block.value = litres * 2.96

//* block:coal *//
oneArgBlock('coal', 'Coal (in litres)', 10);

//* arg:coal *//
var litres = +(logo.parseArg(logo, turtle, conns[1]));
block.value = litres * 3.26

//* block:wood *//
oneArgBlock('wood', 'Wood (in litres)', 10);

//* arg:wood *//
var litres = +(logo.parseArg(logo, turtle, conns[1]));
block.value = litres * 0.10

//* block:bus *//
pictureBlock('bus', 'bus trip', 5 * 0.14);

//* arg:bus *//
block.value = 5 * 0.14;

//* block:train *//
oneArgBlock('train', 'Train trips');

//* arg:train *//
var trips = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trips * 5 * 0.10

//* block:air *//
oneArgBlock('air', 'Air trips');

//* arg:air *//
var trips  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trips * 5 * 0.50

//* block:walk *//
oneArgBlock('walk', 'Walking trips');

//* arg:walk *//
var trips  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trips * 5 * 0.03

//* block:bike *//
oneArgBlock('bike', 'Bicycle trips');

//* arg:bike *//
var trips  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trips * 5 * 0.06

//* block:walk *//
oneArgBlock('walk', 'Walking trips');

//* arg:walk *//
var trips  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = trips * 5 * 0.03

//* block:ac *//
oneArgBlock('ac', 'Air Conditioner (in hours)');

//* arg:ac *//
var hours  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = ((120 * hours) / 1000) * 0.527

//* block:led *//
oneArgBlock('led', 'LED Light (in hours)');

//* arg:led *//
var hours  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = ((6 * hours) / 1000) * 0.527

//* block:lamp *//
oneArgBlock('lamp', 'Fluorescent lamp (in hours)');

//* arg:lamp *//
var hours  = +(logo.parseArg(logo, turtle, conns[1]));
block.value = ((30 * hours) / 1000) * 0.527

//* flow:consume_carbon *//
var block = logo.blocks.blockList[blk];
var conns = block.connections;
carbonEmission += (logo.parseArg(logo, turtle, conns[1]))

//* block:get_carbon *//
var block = new ProtoBlock('get_carbon');
block.palette = palettes.dict['co2'];
blocks.protoBlockDict['get_carbon'] = block;
block.staticLabels.push('get carbon');
block.adjustWidthToLabel();
block.parameterBlock();

//* arg:get_carbon *//
var block = logo.blocks.blockList[blk];
block.value = covertReadableCarbon(carbonEmission)

//* block:clear_carbon *//
var block = new ProtoBlock('clear_carbon');
block.palette = palettes.dict['co2'];
blocks.protoBlockDict['clear_carbon'] = block;
block.staticLabels.push('clear carbon');
block.adjustWidthToLabel();
block.zeroArgBlock();

//* flow:clear_carbon *//
carbonEmission = 0;

//* macro:bus *//
[[0, "multiply", 0, 0, [null, 1, 2]], [1, ["bus", {"value": 5}], 0, 0, [0]], [2, ["number", {"value": 2}], 0, 0, [0]]]

//* palette-icon:co2 *//
<svg width="55" height="55" viewBox="0 0 55 55" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;"><g transform="matrix(1,0,0,1,-13,18)"><path d="M15.176,12.766C15.176,11.224 15.426,9.516 15.926,7.641C16.426,5.766 17.155,4.026 18.113,2.422C19.072,0.818 20.259,-0.526 21.676,-1.609C23.093,-2.693 24.738,-3.234 26.613,-3.234C27.572,-3.359 28.343,-3.266 28.926,-2.953C29.509,-2.641 29.957,-2.151 30.27,-1.484C30.582,-0.818 30.79,-0.057 30.895,0.797C30.999,1.651 31.061,2.526 31.082,3.422C31.103,4.318 31.103,5.151 31.082,5.922C31.061,6.693 31.093,7.328 31.176,7.828L29.613,7.828C29.572,7.578 29.499,6.984 29.395,6.047C29.29,5.109 29.113,4.141 28.863,3.141C28.613,2.141 28.27,1.245 27.832,0.453C27.395,-0.339 26.78,-0.734 25.988,-0.734C24.822,-0.734 23.728,-0.276 22.707,0.641C21.686,1.557 20.801,2.661 20.051,3.953C19.301,5.245 18.697,6.578 18.238,7.953C17.78,9.328 17.551,10.474 17.551,11.391C17.593,12.432 17.738,13.568 17.988,14.797C18.238,16.026 18.645,17.141 19.207,18.141C19.77,19.141 20.509,19.953 21.426,20.578C22.343,21.203 23.468,21.391 24.801,21.141C25.801,21.141 26.759,20.932 27.676,20.516C28.593,20.099 29.488,19.661 30.363,19.203C31.238,18.745 32.124,18.307 33.02,17.891C33.915,17.474 34.863,17.266 35.863,17.266C35.863,18.349 35.468,19.297 34.676,20.109C33.884,20.922 32.915,21.578 31.77,22.078C30.624,22.578 29.415,22.953 28.145,23.203C26.874,23.453 25.801,23.578 24.926,23.578C23.509,23.578 22.207,23.286 21.02,22.703C19.832,22.12 18.801,21.338 17.926,20.359C17.051,19.38 16.374,18.234 15.895,16.922C15.415,15.609 15.176,14.224 15.176,12.766Z" style="fill:white;fill-rule:nonzero;"/><path d="M38.926,12.016C38.926,11.057 39.009,9.943 39.176,8.672C39.343,7.401 39.613,6.12 39.988,4.828C40.363,3.536 40.832,2.266 41.395,1.016C41.957,-0.234 42.634,-1.349 43.426,-2.328C44.218,-3.307 45.134,-4.099 46.176,-4.703C47.218,-5.307 48.384,-5.609 49.676,-5.609C51.009,-5.609 52.249,-5.151 53.395,-4.234C54.54,-3.318 55.52,-2.13 56.332,-0.672C57.145,0.786 57.759,2.411 58.176,4.203C58.593,5.995 58.759,7.745 58.676,9.453C58.676,11.953 58.197,14.182 57.238,16.141C56.28,18.099 55.061,19.682 53.582,20.891C52.103,22.099 50.52,22.911 48.832,23.328C47.145,23.745 45.561,23.63 44.082,22.984C42.603,22.338 41.374,21.12 40.395,19.328C39.415,17.536 38.926,15.099 38.926,12.016ZM41.238,12.266C41.363,14.807 41.801,16.766 42.551,18.141C43.301,19.516 44.207,20.422 45.27,20.859C46.332,21.297 47.488,21.307 48.738,20.891C49.988,20.474 51.155,19.734 52.238,18.672C53.322,17.609 54.249,16.276 55.02,14.672C55.79,13.068 56.218,11.266 56.301,9.266C56.384,7.766 56.27,6.307 55.957,4.891C55.645,3.474 55.207,2.213 54.645,1.109C54.082,0.005 53.395,-0.87 52.582,-1.516C51.77,-2.162 50.843,-2.484 49.801,-2.484C48.801,-2.484 47.905,-2.234 47.113,-1.734C46.322,-1.234 45.603,-0.557 44.957,0.297C44.311,1.151 43.759,2.12 43.301,3.203C42.843,4.286 42.457,5.37 42.145,6.453C41.832,7.536 41.603,8.588 41.457,9.609C41.311,10.63 41.238,11.516 41.238,12.266Z" style="fill:white;fill-rule:nonzero;"/></g><g transform="matrix(1,0,0,1,-6,29)"><text x="50.859px" y="16.635px" style="font-family:'AnnieUseYourTelescope-Regular';font-size:18px;fill:white;">2</text></g></svg>
//* palette-fill:co2 *// #D5D5D5
//* palette-stroke:co2 *// #A0A0A0
//* palette-highlight:co2 *// #FFFFFF
//* palette-stroke-highlight:co2 *// #000000

//* image:bus *//
<svg width="100%" height="100%" viewBox="0 0 95 87" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.41421;"> <g id="Layer1"> <g transform="matrix(1.28571,0,0,1.28571,-8.57143,-5.35135)"> <path d="M11,25L91,25L92,26L93,28L93,65L92,66L91,67L87,67L87,62L87,61L86,59L85,58L83,56C83.866,56.712 81.408,55.197 80,55C78.302,54.929 77.1,54.954 76,55L74,56C72.794,56.747 70.744,57.685 70,59L69,61L69,67L26,67L26,64L25,61L23,58L21,57L18,56L15,56L12,57L10,59C9.179,59.762 8.53,60.79 8,62L8,66L6,66L4,66L2,66L2,50L2,42L2,40L4,34L6,28C6.519,26.977 7.277,25.205 8,25C9.134,24.678 11,25 11,25Z" style="fill:none;stroke-width:0.74px;stroke:black;"/> <g transform="matrix(1.18182,0,0,1.18182,-15.2727,-12.9091)"> <path d="M78.5,60C81.645,60.563 83.303,63.328 84,65.5C84.726,67.761 82.531,69.69 78.5,71C75.394,72.009 72.844,68.927 73,65.5C73.138,62.468 75.512,59.465 78.5,60Z" style="fill:black;"/> </g> <g transform="matrix(1.18182,0,0,1.18182,-75.2727,-12.9091)"> <path d="M78.5,60C81.645,60.563 83.303,63.328 84,65.5C84.726,67.761 82.531,69.69 78.5,71C75.394,72.009 72.844,68.927 73,65.5C73.138,62.468 75.512,59.465 78.5,60Z" style="fill:black;"/> </g> <g transform="matrix(1.30769,0,0,1.07692,-8.30769,-2.23077)"> <path d="M40,29C35.713,28.461 31.391,28.337 27,29C25.763,34.385 25.782,38.702 27,42C31.344,42.943 34.839,43.036 40,42C41.017,32.971 41.109,28.216 40,29Z" style="fill:none;stroke-width:0.62px;stroke:black;"/> </g> <g transform="matrix(1.30769,0,0,1.07692,13.6923,-2.23077)"> <path d="M40,29C35.713,28.461 31.391,28.337 27,29C25.763,34.385 25.782,38.702 27,42C31.344,42.943 34.839,43.036 40,42C41.017,32.971 41.109,28.216 40,29Z" style="fill:none;stroke-width:0.62px;stroke:black;"/> </g> <g transform="matrix(1.30769,0,0,1.07692,36.6923,-2.23077)"> <path d="M40,29C35.713,28.461 31.391,28.337 27,29C25.763,34.385 25.782,38.702 27,42C31.344,42.943 34.839,43.036 40,42C41.017,32.971 41.109,28.216 40,29Z" style="fill:none;stroke-width:0.62px;stroke:black;"/> </g> <path d="M23,44L23,28L12,28C11.303,28.088 10.057,28.385 9,29C8.489,29.297 8.822,28.979 8,30C7.635,30.326 7.302,30.659 7,31L7,33L6,48L18,48L23,44Z" style="fill:none;stroke-width:0.74px;stroke:black;"/> </g> <g transform="matrix(1.31671,0,0,1.31671,-10.2126,10.6829)"> <path d="M30.237,-1.956C30.175,-1.971 30.101,-2.018 30.015,-2.096C29.929,-2.174 29.851,-2.26 29.78,-2.354C29.71,-2.448 29.651,-2.542 29.605,-2.635C29.558,-2.729 29.534,-2.807 29.534,-2.87C29.581,-3.385 29.773,-3.772 30.108,-4.03C30.444,-4.288 30.831,-4.464 31.269,-4.557C31.706,-4.651 32.159,-4.698 32.628,-4.698C33.097,-4.698 33.495,-4.698 33.823,-4.698C34.37,-4.698 34.874,-4.671 35.335,-4.616C35.796,-4.561 36.198,-4.436 36.542,-4.241C36.886,-4.046 37.159,-3.768 37.362,-3.409C37.566,-3.049 37.667,-2.557 37.667,-1.932C37.667,-1.62 37.655,-1.342 37.632,-1.1C37.608,-0.858 37.566,-0.624 37.503,-0.397C37.441,-0.171 37.347,0.072 37.222,0.329C37.097,0.587 36.933,0.88 36.73,1.208C37.37,1.411 37.901,1.603 38.323,1.783C38.745,1.962 39.073,2.181 39.308,2.439C39.542,2.697 39.702,3.009 39.788,3.376C39.874,3.744 39.917,4.216 39.917,4.794C39.917,5.482 39.769,6.13 39.472,6.74C39.175,7.349 38.78,7.88 38.288,8.333C37.796,8.786 37.222,9.142 36.566,9.4C35.909,9.658 35.214,9.786 34.48,9.786C34.323,9.786 34.112,9.759 33.847,9.704C33.581,9.65 33.292,9.579 32.98,9.494C32.667,9.408 32.347,9.306 32.019,9.189C31.691,9.072 31.394,8.943 31.128,8.802C30.862,8.661 30.648,8.521 30.483,8.38C30.319,8.24 30.237,8.099 30.237,7.958L30.237,-1.956ZM31.784,3.458C31.816,3.833 31.8,4.224 31.737,4.63C31.675,5.036 31.62,5.427 31.573,5.802C31.526,6.177 31.511,6.533 31.526,6.869C31.542,7.204 31.636,7.505 31.808,7.771C31.98,8.036 32.261,8.267 32.651,8.462C33.042,8.658 33.581,8.794 34.269,8.872C34.847,8.872 35.421,8.767 35.991,8.556C36.562,8.345 37.069,8.056 37.515,7.689C37.96,7.322 38.323,6.884 38.605,6.376C38.886,5.869 39.026,5.31 39.026,4.701C39.026,4.294 38.956,3.951 38.816,3.669C38.675,3.388 38.487,3.158 38.253,2.978C38.019,2.798 37.741,2.669 37.421,2.591C37.101,2.513 36.761,2.474 36.401,2.474C35.948,2.474 35.542,2.486 35.183,2.509C34.823,2.533 34.468,2.579 34.116,2.65C33.765,2.72 33.405,2.822 33.038,2.954C32.671,3.087 32.253,3.255 31.784,3.458ZM31.316,1.021C31.316,1.146 31.323,1.275 31.339,1.408C31.355,1.54 31.382,1.658 31.421,1.759C31.46,1.861 31.526,1.947 31.62,2.017C31.714,2.087 31.839,2.122 31.995,2.122C32.526,2.122 33.073,2.021 33.636,1.818C34.198,1.615 34.71,1.333 35.171,0.974C35.632,0.615 36.015,0.189 36.319,-0.303C36.624,-0.796 36.776,-1.346 36.776,-1.956C36.776,-2.018 36.761,-2.108 36.73,-2.225C36.698,-2.342 36.628,-2.464 36.519,-2.589C36.409,-2.714 36.245,-2.835 36.026,-2.952C35.808,-3.069 35.515,-3.167 35.148,-3.245C34.78,-3.323 34.323,-3.37 33.776,-3.385C33.23,-3.401 32.566,-3.37 31.784,-3.292C31.753,-3.26 31.718,-3.159 31.679,-2.987C31.64,-2.815 31.601,-2.6 31.562,-2.342C31.523,-2.085 31.491,-1.803 31.468,-1.499C31.444,-1.194 31.421,-0.889 31.398,-0.585C31.374,-0.28 31.355,0.013 31.339,0.294C31.323,0.576 31.316,0.818 31.316,1.021Z" style="fill:black;fill-rule:nonzero;stroke-width:1.52px;stroke-linecap:butt;stroke:black;"/> <path d="M49.901,3.88C49.276,5.458 48.659,6.677 48.05,7.536C47.441,8.396 46.847,8.97 46.269,9.259C45.691,9.548 45.144,9.583 44.628,9.365C44.112,9.146 43.64,8.744 43.21,8.158C42.78,7.572 42.413,6.833 42.108,5.943C41.804,5.052 41.562,4.076 41.382,3.013C41.202,1.951 41.108,0.837 41.101,-0.327C41.093,-1.491 41.183,-2.635 41.37,-3.76L42.284,-3.667C42.112,-1.667 42.093,0.072 42.226,1.548C42.358,3.025 42.573,4.255 42.87,5.24C43.167,6.224 43.511,6.974 43.901,7.49C44.292,8.005 44.667,8.302 45.026,8.38C45.558,8.38 46.03,8.24 46.444,7.958C46.858,7.677 47.226,7.31 47.546,6.857C47.866,6.404 48.14,5.888 48.366,5.31C48.593,4.732 48.776,4.146 48.917,3.552C49.058,2.958 49.159,2.384 49.222,1.829C49.284,1.275 49.316,0.794 49.316,0.388C49.316,-0.143 49.3,-0.616 49.269,-1.03C49.237,-1.444 49.187,-1.854 49.116,-2.26C49.046,-2.667 48.968,-3.085 48.882,-3.514C48.796,-3.944 48.698,-4.44 48.589,-5.003L49.737,-5.846C50.097,-3.581 50.405,-1.639 50.663,-0.022C50.921,1.595 51.144,2.947 51.331,4.033C51.519,5.119 51.667,5.986 51.776,6.634C51.886,7.283 51.976,7.79 52.046,8.158C52.116,8.525 52.163,8.783 52.187,8.931C52.21,9.079 52.222,9.201 52.222,9.294L51.261,9.294L49.901,3.88Z" style="fill:black;fill-rule:nonzero;stroke-width:1.52px;stroke-linecap:butt;stroke:black;"/> <path d="M53.956,7.958C54.034,7.771 54.155,7.654 54.319,7.607C54.483,7.56 54.659,7.677 54.847,7.958C54.847,7.99 54.921,8.033 55.069,8.087C55.218,8.142 55.405,8.204 55.632,8.275C55.858,8.345 56.124,8.415 56.429,8.486C56.733,8.556 57.034,8.619 57.331,8.673C57.628,8.728 57.917,8.775 58.198,8.814C58.48,8.853 58.722,8.872 58.925,8.872C59.456,8.872 59.944,8.759 60.39,8.533C60.835,8.306 61.218,8.013 61.538,7.654C61.858,7.294 62.105,6.884 62.276,6.423C62.448,5.962 62.534,5.49 62.534,5.005C62.534,4.865 62.511,4.619 62.464,4.267C62.417,3.915 62.339,3.564 62.23,3.212C62.12,2.861 61.976,2.544 61.796,2.263C61.616,1.982 61.401,1.841 61.151,1.841C59.526,2.029 58.194,2.103 57.155,2.064C56.116,2.025 55.292,1.904 54.683,1.701C54.073,1.497 53.648,1.22 53.405,0.869C53.163,0.517 53.034,0.115 53.019,-0.339C53.019,-0.901 53.159,-1.444 53.441,-1.967C53.722,-2.491 54.081,-2.956 54.519,-3.362C54.956,-3.768 55.444,-4.092 55.983,-4.335C56.523,-4.577 57.058,-4.698 57.589,-4.698C58.026,-4.698 58.483,-4.643 58.96,-4.534C59.437,-4.424 59.878,-4.256 60.284,-4.03C60.691,-3.803 61.023,-3.506 61.28,-3.139C61.538,-2.772 61.667,-2.331 61.667,-1.815C61.292,-1.815 60.948,-1.921 60.636,-2.131C60.323,-2.342 60.011,-2.565 59.698,-2.799C59.386,-3.034 59.058,-3.256 58.714,-3.467C58.37,-3.678 57.972,-3.784 57.519,-3.784C57.144,-3.784 56.765,-3.69 56.382,-3.503C55.999,-3.315 55.655,-3.073 55.351,-2.776C55.046,-2.479 54.796,-2.147 54.601,-1.78C54.405,-1.413 54.308,-1.034 54.308,-0.643C54.308,-0.487 54.312,-0.319 54.319,-0.139C54.327,0.04 54.362,0.212 54.425,0.376C54.487,0.54 54.585,0.677 54.718,0.786C54.851,0.896 55.042,0.951 55.292,0.951L61.597,0.951C61.862,0.951 62.093,1.033 62.288,1.197C62.483,1.361 62.648,1.568 62.78,1.818C62.913,2.068 63.023,2.349 63.108,2.661C63.194,2.974 63.265,3.279 63.319,3.576C63.374,3.872 63.409,4.15 63.425,4.408C63.441,4.665 63.448,4.865 63.448,5.005C63.448,5.615 63.362,6.189 63.191,6.728C63.019,7.267 62.761,7.751 62.417,8.181C62.073,8.611 61.644,8.962 61.128,9.236C60.612,9.509 60.019,9.677 59.347,9.74C59.019,9.771 58.593,9.763 58.069,9.716C57.546,9.669 57.019,9.579 56.487,9.447C55.956,9.314 55.456,9.126 54.987,8.884C54.519,8.642 54.175,8.333 53.956,7.958Z" style="fill:black;fill-rule:nonzero;stroke-width:1.52px;stroke-linecap:butt;stroke:black;"/> </g> </g></svg>